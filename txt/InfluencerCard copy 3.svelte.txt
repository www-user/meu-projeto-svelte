<script lang="ts">
	import type { Influencer } from '$lib/types';
	
	const { influencer, onClick } = $props<{ influencer: Influencer; onClick: () => void }>();

	let loaded = $state(false);
</script>

<article class="card" onclick={onClick} onkeypress={onClick} role="button" tabindex="0">
	<div class="image-container">
		<img
			src={influencer.foto_placeholder_url}
			alt=""
			class="placeholder"
			aria-hidden="true"
		/>
		<img
			src={influencer.foto_url}
			alt="Foto de {influencer.nome}"
			class="full-res"
			class:loaded
			onload={() => (loaded = true)}
			loading="lazy"
			decoding="async"
		/>
	</div>
	<div class="content">
		<h3>{influencer.nome}</h3>
		<p class="handle">@{influencer.arroba}</p>
		<div class="tag-wrapper">
			<span class="tag">{influencer.nicho}</span>
		</div>
		<div class="actions">
			<a href={influencer.instagram_link} target="_blank" rel="noopener noreferrer" class="btn btn-secondary" onclick={(event) => event.stopPropagation()}>Instagram</a>
			<a href={influencer.contato_link} class="btn btn-secondary" onclick={(event) => event.stopPropagation()}>Contato</a>
			<button class="btn btn-primary">Ver VÃ­deo</button>
		</div>
	</div>
</article>

<style>
	.card {
		background: var(--cor-branca);
		border-radius: var(--raio-borda);
		border: 1px solid var(--cor-borda);
		overflow: hidden;
		display: flex;
		flex-direction: column;
		transition: all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1);
		cursor: pointer;
	}
	.card:hover {
		transform: translateY(-8px);
		box-shadow: 0 10px 30px rgba(0, 0, 0, 0.08);
	}
	.image-container {
		position: relative;
		width: 100%;
		aspect-ratio: 4 / 5;
		overflow: hidden;
	}
	.image-container img {
		position: absolute;
		top: 0;
		left: 0;
		width: 100%;
		height: 100%;
		object-fit: cover;
	}
	.placeholder {
		filter: blur(10px);
	}
	.full-res {
		opacity: 0;
		transition: opacity 0.5s ease-in;
	}
	.full-res.loaded {
		opacity: 1;
	}
	.card:hover .full-res.loaded {
		transform: scale(1.05);
		transition: transform 0.4s ease;
	}
	.content {
		padding: 1.5rem;
		display: flex;
		flex-direction: column;
		flex-grow: 1;
	}
	h3 {
		font-family: var(--fonte-serif);
		font-size: 1.5rem;
		color: var(--cor-texto);
		margin-bottom: 0.25rem;
	}
	.handle {
		color: var(--cor-texto-suave);
		margin-bottom: 1rem;
		font-size: 0.9rem;
	}
	.tag-wrapper {
		flex-grow: 1;
	}
	.tag {
		align-self: flex-start;
		background-color: #eef2ff;
		color: var(--cor-destaque);
		padding: 0.3rem 0.8rem;
		border-radius: 50px;
		font-size: 0.75rem;
		font-family: var(--fonte-sans);
		font-weight: 500;
		text-transform: capitalize;
	}
	.actions {
		display: grid;
		grid-template-columns: repeat(3, 1fr);
		gap: 0.75rem;
		padding-top: 1.5rem;
	}
	.btn {
		padding: 0.75rem 0.5rem;
		font-size: 0.9rem;
		text-align: center;
		border-radius: 6px;
		font-family: var(--fonte-sans);
		font-weight: 500;
		transition: all 0.2s ease;
		text-decoration: none;
	}
	.btn-secondary {
		border: 1px solid var(--cor-borda);
		background: var(--cor-branca);
		color: var(--cor-texto-suave);
        cursor: pointer; /* Garante o cursor de ponteiro nos links */
	}
	.btn-secondary:hover {
		border-color: var(--cor-destaque);
		color: var(--cor-destaque);
	}
	.btn-primary {
		border: 1px solid var(--cor-destaque);
		background: var(--cor-destaque);
		color: var(--cor-branca);
        cursor: pointer;
	}
	.btn-primary:hover {
		background: #4338ca;
		border-color: #4338ca;
	}
</style>